int Solution::minCut(string str) {
    int n = str.size();
    vector<int>v(n, 0) ;
    vector<vector<int> >dp(n, v), bl(n, v);
    for(int i = 0;i < n; i++){
        for(int j = 0;j < n - i; j++){
            int k = j + i;
            if(k == j){
                dp[j][k] = 1;
                bl[j][k] = 1;
            }
            else if(k == j+1){
                if(str[j] == str[k]){
                    dp[j][k] = 2;
                    bl[j][k] = 1;
                }
            }
            else{
                if(str[j] == str[k] && bl[j+1][k-1]){
                    dp[j][k] = dp[j+1][k-1] + 2;
                    bl[j][k] = 1;
                }
            }
        }
    }
    vector<int>ans(n, 100000), ar(n, 0);
    int k;
    for(int i = 0;i < n;i++){
        if(dp[0][i] ){
            //ar[i] = 1;
            ans[i] = 0;
        }
        // else if(ar[i]){
        //     if(bl[0][i]){
        //         ar[i] = 1;
        //         ans[i] = 0;
        //     }
        // }
        k = ans[i];
        for(int j = i+1;j < n;j++){
            if(bl[i+1][j] ){
                //ar[j] = 1;
                ans[j] = min(ans[j], k+1);
            }
        }
    }
    // for(int i = 0;i < n;i++){
    //     cout<<ans[i]<<" ";
    // }
    return ans[n-1];
    // for(int i = 0;i < n; i++){
    //     for(int j = 0;j < n;j++){
    //         cout<<dp[i][j]<<" ";
    //     }
    //     cout<<"\n";
    // }
    // for(int i = 0;i < n; i++){
    //     for(int j = 0;j < n;j++){
    //         cout<<bl[i][j]<<" ";
    //     }
    //     cout<<"\n";
    // }
    return 0;
}