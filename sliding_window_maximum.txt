class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& ar, int k) {
        deque<pair<int, int> >dq;
        pair<int, int>pa;
        vector<int>vect;
        int n = ar.size();
        
        for(int i = 0; i < n; i++){
            if(dq.empty()){
                dq.push_back(make_pair(i, ar[i]) );
            }
            else{
                pa = dq.front();
                if(abs(pa.first - i) >= k){
                    dq.pop_front();
                }

                    while(!dq.empty() && dq.back().second <= ar[i]){
                        dq.pop_back();
                    }

                dq.push_back(make_pair(i, ar[i]) );
                pa = dq.front();
            }
            if(i >= k-1){
                vect.push_back(dq.front().second);     
            }
        }
        return vect;
    }
};