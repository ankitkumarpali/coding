class Solution {
public:
    int lengthLongestPath(string str) {
        stack<pair<int, int> >st;
        bool isfile ;
        int level = 0, maxlength = 0, input = 0, i = 0;
        int size = str.size();
        st.push(make_pair(-1, 0));
        // int k = st.top().first;
        while(i < size){
            isfile = false;
            level = 0, input = 0;
            while(str[i] == '\t'){
                level++;
                i++;
            }
            while(level <= st.top().first){
                st.pop();
            }
            while(str[i] != '\n' && i < size){
                if(str[i] == '.'){
                    isfile = true;
                }
                input++;
                i++;
            }
            int k = st.top().second;
           
            if(isfile){
                maxlength = max(maxlength, input + k);
            }
            else{
                st.push(make_pair(level, input + k + 1));
            }
            i++;
        }
        return maxlength;
    }
    
};